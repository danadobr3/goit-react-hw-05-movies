{"version":3,"file":"static/js/392.cfc83a5c.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/helpers/useFetchMovieCast.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  text-align: center;\n`;\n\nexport const CastHeading = styled.h3`\n  text-align: center;\n  color: #54414E;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  text-align: center;\n`;\n\nexport const CastImage = styled.img`\n  border-radius: 8px;\n  border: 2px solid #A790A5;\n`;\n\nexport const CastName = styled.h3`\n  margin-top: 10px;\n  color: #54414E;\n`;\n\nexport const CastCharacter = styled.p`\n  margin-top: 5px;\n  color: #875C74; \n`;\n","// import { useFetchMovieCast } from \"components/helpers/useFetchMovieCast\";\n\n\n// const Cast = () => {\n//   const defaultImg =\n//     'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image';\n\n//   const movieCast = useFetchMovieCast();\n//   if (!movieCast.credits || movieCast.credits.length === 0) {\n//     return (\n//       <p style={{ textAlign: 'center' }}>There isn't any information about the movie cast</p>\n//     );\n//   }\n//   return (\n//     <>\n//       <h3 style={{ textAlign: 'center', textDecoration: 'underline' }}>\n//         Movie cast\n//       </h3>\n//       <ul style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n//         {movieCast.credits.map(\n//           ({ movie_id, profile_path, original_name, character }) => (\n//             <li key={movie_id}>\n//               <img\n//                 style={{ borderRadius: '4px', border: 'red , 2px' }}\n//                 src={\n//                   profile_path\n//                     ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n//                     : defaultImg\n//                 }\n//                 alt={original_name}\n//                 width={250}\n//               />\n//               <h3>{original_name}</h3>\n//               <p>Character: {character}</p>\n//             </li>\n//           )\n//         )}\n//       </ul>\n//     </>\n//   );\n// };\n\n// export default Cast;\n\nimport React from 'react';\n\n\nimport { useFetchMovieCast } from 'components/helpers/useFetchMovieCast';\nimport { CastCharacter, CastContainer, CastHeading, CastImage, CastItem, CastList, CastName } from './Cast.styled';\n\nconst Cast = () => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image';\n\n  const movieCast = useFetchMovieCast();\n  if (!movieCast.credits || movieCast.credits.length === 0) {\n    return (\n      <p style={{ textAlign: 'center' }}>There isn't any information about the movie cast</p>\n    );\n  }\n\n  return (\n    <CastContainer>\n      <CastHeading>Movie cast</CastHeading>\n      <CastList>\n        {movieCast.credits.map(({ movie_id, profile_path, original_name, character }) => (\n          <CastItem key={movie_id}>\n            <CastImage\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : defaultImg\n              }\n              alt={original_name}\n              width={250}\n            />\n            <CastName>{original_name}</CastName>\n            <CastCharacter>Character: {character}</CastCharacter>\n          </CastItem>\n        ))}\n      </CastList>\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastInfo } from 'services/api';\n\n\nexport const useFetchMovieCast = () => {\n  const [credits, setCredits] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    if (!movieId) return;\n    const fetchMovieCast = async () => {\n      try {\n        const data = await getCastInfo(movieId);\n        setCredits(data.cast);\n      } catch (error) {\n        setError('Try to reload the page');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return { credits, error, loading };\n};","import axios from 'axios';\n\nconst API_KEY = '6737ef5101d688762393da727963265b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getAllMoviesList = async () => {\n  try {\n    const data = await axios(`/trending/all/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const data = await axios(\n      `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getAllMoviesInfo = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getCastInfo = async movieId => {\n  try {\n    const { data } = await axios(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getReviewsInfo = async movieId => {\n  try {\n    const data = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};"],"names":["CastContainer","styled","_templateObject","_taggedTemplateLiteral","CastHeading","_templateObject2","CastList","_templateObject3","CastItem","_templateObject4","CastImage","_templateObject5","CastName","_templateObject6","CastCharacter","_templateObject7","movieCast","_useState","useState","_useState2","_slicedToArray","credits","setCredits","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","movieId","useParams","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getCastInfo","sent","cast","t0","finish","stop","apply","arguments","useFetchMovieCast","length","_jsxs","children","_jsx","map","movie_id","profile_path","original_name","character","src","concat","alt","width","style","textAlign","API_KEY","axios","getAllMoviesList","abrupt","getMovieByQuery","_ref2","_callee2","query","_context2","_x","getAllMoviesInfo","_ref3","_callee3","_yield$axios$get","_context3","_x2","_ref4","_callee4","_yield$axios","_context4","_x3","getReviewsInfo","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}
{"version":3,"file":"static/js/755.fb69043a.chunk.js","mappings":"oRAEaA,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAI7BC,EAAiBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oDAK1BG,EAAcL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+BAIvBK,EAAcP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6BAIvBO,EAAgBT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oDAKzBS,EAAmBX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kD,SCMxC,EAvBgB,WACd,IAAMW,ECH4B,WAClC,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAClBG,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WAER,GADAH,GAAW,GACNC,EAAL,CACA,IAAMG,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAECC,EAAAA,EAAAA,IAAeb,GAAS,KAAD,EAAAQ,EAAAE,EAAAI,KAAtCL,EAAID,EAAJC,KACRlB,EAAWkB,EAAKM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEzBf,EAAS,0BAA0B,QAEjB,OAFiBe,EAAAC,KAAA,GAEnCZ,GAAW,GAAOW,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAX,EAAA,wBAErB,kBATsB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAUvBjB,GAXoB,CAYtB,GAAG,CAACH,IAEG,CAAEV,QAAAA,EAASI,MAAAA,EAAOI,QAAAA,EAC3B,CDpBuBuB,GACrB,OAAoC,IAAhCpC,EAAaK,QAAQgC,QAAiBrC,EAAaK,SAOrDiC,EAAAA,EAAAA,MAACpD,EAAgB,CAAAqD,SAAA,EACfC,EAAAA,EAAAA,KAAClD,EAAc,CAAAiD,SAAC,aAChBC,EAAAA,EAAAA,KAAChD,EAAW,CAAA+C,SACTvC,EAAaK,QAAQoC,KAAI,SAAAtB,GAAA,IAAGJ,EAAOI,EAAPJ,QAAS2B,EAAMvB,EAANuB,OAAQC,EAAOxB,EAAPwB,QAAO,OACnDL,EAAAA,EAAAA,MAAC5C,EAAW,CAAA6C,SAAA,EACVC,EAAAA,EAAAA,KAAC5C,EAAa,CAAA2C,SAAEG,KAChBF,EAAAA,EAAAA,KAAC1C,EAAgB,CAAAyC,SAAEI,MAFH5B,EAGJ,UAZlByB,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAEC,UAAW,UAAWN,SAAC,2CAiBzC,C,+LE1BMO,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAgB,eAAA7B,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAE,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEToB,EAAAA,EAAAA,GAAM,6BAADE,OAA8BH,IAAW,KAAD,EAAtD,OAAJtB,EAAIC,EAAAI,KAAAJ,EAAAyB,OAAA,SACH1B,GAAI,aAAAC,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAAM,GAAC,KAAD,oBAAAN,EAAAQ,OAAA,GAAAX,EAAA,kBAId,kBAP4B,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAShBgB,EAAe,eAAAC,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgC,EAAMC,GAAK,IAAA9B,EAAA,OAAAH,IAAAA,MAAA,SAAAkC,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,GAEnBoB,EAAAA,EAAAA,GAAM,yBAADE,OACGH,EAAO,WAAAG,OAAUK,EAAK,yBAC/C,KAAD,EAFS,OAAJ9B,EAAI+B,EAAA1B,KAAA0B,EAAAL,OAAA,SAGH1B,GAAI,aAAA+B,EAAA7B,KAAA,EAAA6B,EAAAxB,GAAAwB,EAAA,SAAAA,EAAAxB,GAAC,KAAD,oBAAAwB,EAAAtB,OAAA,GAAAoB,EAAA,kBAId,gBAT2BG,GAAA,OAAAJ,EAAAlB,MAAA,KAAAC,UAAA,KAWfsB,EAAgB,eAAAC,GAAAtC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsC,EAAM5C,GAAO,IAAA6C,EAAApC,EAAA,OAAAH,IAAAA,MAAA,SAAAwC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAnC,KAAA,EAAAmC,EAAAlC,KAAA,EAElBoB,EAAAA,EAAAA,IAAU,UAADE,OAAWlC,EAAO,aAAAkC,OAAYH,IAAW,KAAD,EAA5D,OAA4Dc,EAAAC,EAAAhC,KAAhEL,EAAIoC,EAAJpC,KAAIqC,EAAAX,OAAA,SACL1B,GAAI,aAAAqC,EAAAnC,KAAA,EAAAmC,EAAA9B,GAAA8B,EAAA,SAAAA,EAAA9B,GAAC,KAAD,oBAAA8B,EAAA5B,OAAA,GAAA0B,EAAA,kBAId,gBAP4BG,GAAA,OAAAJ,EAAAxB,MAAA,KAAAC,UAAA,KAShB4B,EAAW,eAAAC,GAAA5C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4C,EAAMlD,GAAO,IAAAmD,EAAA1C,EAAA,OAAAH,IAAAA,MAAA,SAAA8C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,GAEboB,EAAAA,EAAAA,GAAM,UAADE,OAChBlC,EAAO,qBAAAkC,OAAoBH,IACrC,KAAD,EAFW,OAEXoB,EAAAC,EAAAtC,KAFOL,EAAI0C,EAAJ1C,KAAI2C,EAAAjB,OAAA,SAGL1B,GAAI,aAAA2C,EAAAzC,KAAA,EAAAyC,EAAApC,GAAAoC,EAAA,SAAAA,EAAApC,GAAC,KAAD,oBAAAoC,EAAAlC,OAAA,GAAAgC,EAAA,kBAId,gBATuBG,GAAA,OAAAJ,EAAA9B,MAAA,KAAAC,UAAA,KAWXP,EAAc,eAAAyC,GAAAjD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiD,EAAMvD,GAAO,IAAAS,EAAA,OAAAH,IAAAA,MAAA,SAAAkD,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA7C,KAAA,EAAA6C,EAAA5C,KAAA,GAEpBoB,EAAAA,EAAAA,GAAM,UAADE,OAAWlC,EAAO,qBAAAkC,OAAoBH,IAAW,KAAD,EAA9D,OAAJtB,EAAI+C,EAAA1C,KAAA0C,EAAArB,OAAA,SACH1B,GAAI,aAAA+C,EAAA7C,KAAA,EAAA6C,EAAAxC,GAAAwC,EAAA,SAAAA,EAAAxC,GAAC,KAAD,oBAAAwC,EAAAtC,OAAA,GAAAqC,EAAA,kBAId,gBAP0BE,GAAA,OAAAH,EAAAnC,MAAA,KAAAC,UAAA,I","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/helpers/useFetchMovieReviews.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  text-align: center;\n`;\n\nexport const ReviewsHeading = styled.h3`\n  text-align: center;\n  color: #54414E;\n`;\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin: 20px 0;\n`;\n\nexport const AuthorHeading = styled.h3`\n  text-align: center;\n  color: #54414E;\n`;\n\nexport const ContentParagraph = styled.p`\n  text-align: left;\n  color: #875C74;\n`;\n","import React from 'react';\n\nimport { useFetchMovieReviews } from 'components/helpers/useFetchMovieReviews';\n\nimport { AuthorHeading, ContentParagraph, ReviewsContainer, ReviewsHeading, ReviewsItem, ReviewsList } from './Reviews.styled';\n\n\nconst Reviews = () => {\n  const movieReviews = useFetchMovieReviews();\n  if (movieReviews.reviews.length === 0 || !movieReviews.reviews) {\n    return (\n      <p style={{ textAlign: 'center' }}>There aren't any reviews for this movie</p>\n    );\n  }\n\n  return (\n    <ReviewsContainer>\n      <ReviewsHeading>Rewievs</ReviewsHeading>\n      <ReviewsList>\n        {movieReviews.reviews.map(({ movieId, author, content }) => (\n          <ReviewsItem key={movieId}>\n            <AuthorHeading>{author}</AuthorHeading>\n            <ContentParagraph>{content}</ContentParagraph>\n          </ReviewsItem>\n        ))}\n      </ReviewsList>\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsInfo } from 'services/api';\n\n\nexport const useFetchMovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    if (!movieId) return;\n    const fetchMovieReviews = async () => {\n      try {\n        const { data } = await getReviewsInfo(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError('Try to reload the page');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return { reviews, error, loading };\n};","import axios from 'axios';\n\nconst API_KEY = '6737ef5101d688762393da727963265b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getAllMoviesList = async () => {\n  try {\n    const data = await axios(`/trending/all/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const data = await axios(\n      `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getAllMoviesInfo = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getCastInfo = async movieId => {\n  try {\n    const { data } = await axios(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getReviewsInfo = async movieId => {\n  try {\n    const data = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};"],"names":["ReviewsContainer","styled","_templateObject","_taggedTemplateLiteral","ReviewsHeading","_templateObject2","ReviewsList","_templateObject3","ReviewsItem","_templateObject4","AuthorHeading","_templateObject5","ContentParagraph","_templateObject6","movieReviews","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","movieId","useParams","useEffect","fetchMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getReviewsInfo","data","_context","prev","next","getReviewsInfo","sent","results","t0","finish","stop","apply","arguments","useFetchMovieReviews","length","_jsxs","children","_jsx","map","author","content","style","textAlign","API_KEY","axios","getAllMoviesList","concat","abrupt","getMovieByQuery","_ref2","_callee2","query","_context2","_x","getAllMoviesInfo","_ref3","_callee3","_yield$axios$get","_context3","_x2","getCastInfo","_ref4","_callee4","_yield$axios","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}